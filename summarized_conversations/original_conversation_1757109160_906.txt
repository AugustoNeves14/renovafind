{'role': 'assistant', 'content': 'Let\'s create the browse page component:\n\n<function_calls>\n<create-file file_path="angocine/frontend/angocine/src/app/pages/browse/browse.component.ts">\nimport { Component, OnInit } from \'@angular/core\';\nimport { ActivatedRoute, Router } from \'@angular/router\';\nimport { MovieService } from \'../../services/movie.service\';\nimport { Movie } from \'../../models/movie.model\';\n\n@Component({\n  selector: \'app-browse\',\n  templateUrl: \'./browse.component.html\',\n  styleUrls: [\'./browse.component.scss\']\n})\nexport class BrowseComponent implements OnInit {\n  movies: Movie[] = [];\n  totalMovies: number = 0;\n  currentPage: number = 1;\n  itemsPerPage: number = 20;\n  \n  selectedGenre: string = \'\';\n  selectedYear: number | null = null;\n  selectedLanguage: string = \'\';\n  selectedRating: number | null = null;\n  selectedSort: string = \'release_year\';\n  selectedOrder: string = \'desc\';\n  \n  isLoading: boolean = true;\n  error: string | null = null;\n  \n  constructor(\n    private movieService: MovieService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n  \n  ngOnInit(): void {\n    // Get query params\n    this.route.queryParams.subscribe(params => {\n      this.currentPage = params[\'page\'] ? parseInt(params[\'page\']) : 1;\n      this.selectedGenre = params[\'genre\'] || \'\';\n      this.selectedYear = params[\'year\'] ? parseInt(params[\'year\']) : null;\n      this.selectedLanguage = params[\'language\'] || \'\';\n      this.selectedRating = params[\'rating\'] ? parseInt(params[\'rating\']) : null;\n      this.selectedSort = params[\'sort\'] || \'release_year\';\n      this.selectedOrder = params[\'order\'] || \'desc\';\n      \n      this.loadMovies();\n    });\n  }\n  \n  loadMovies(): void {\n    this.isLoading = true;\n    \n    this.movieService.getMovies(\n      this.currentPage,\n      this.itemsPerPage,\n      this.selectedGenre,\n      this.selectedYear,\n      this.selectedLanguage,\n      this.selectedRating,\n      this.selectedSort,\n      this.selectedOrder\n    ).subscribe(\n      response => {\n        this.movies = response.data.movies;\n        this.totalMovies = response.data.pagination.total;\n        this.isLoading = false;\n      },\n      error => {\n        console.error(\'Error loading movies:\', error);\n        this.error = \'Erro ao carregar filmes. Por favor, tente novamente mais tarde.\';\n        this.isLoading = false;\n      }\n    );\n  }\n  \n  onFiltersChanged(filters: any): void {\n    // Update filters\n    this.selectedGenre = filters.genre;\n    this.selectedYear = filters.year;\n    this.selectedLanguage = filters.language;\n    this.selectedRating = filters.rating;\n    this.selectedSort = filters.sort;\n    this.selectedOrder = filters.order;\n    \n    // Reset to first page\n    this.currentPage = 1;\n    \n    // Update URL with new filters\n    this.updateQueryParams();\n    \n    // Load movies with new filters\n    this.loadMovies();\n  }\n  \n  onPageChange(page: number): void {\n    this.currentPage = page;\n    this.updateQueryParams();\n    this.loadMovies();\n    \n    // Scroll to top\n    window.scrollTo({ top: 0, behavior: \'smooth\' });\n  }\n  \n  updateQueryParams(): void {\n    const queryParams: any = {\n      page: this.currentPage\n    };\n    \n    if (this.selectedGenre) {\n      queryParams.genre = this.selectedGenre;\n    }\n    \n    if (this.selectedYear) {\n      queryParams.year = this.selectedYear;\n    }\n    \n    if (this.selectedLanguage) {\n      queryParams.language = this.selectedLanguage;\n    }\n    \n    if (this.selectedRating) {\n      queryParams.rating = this.selectedRating;\n    }\n    \n    if (this.selectedSort !== \'release_year\') {\n      queryParams.sort = this.selectedSort;\n    }\n    \n    if (this.selectedOrder !== \'desc\') {\n      queryParams.order = this.selectedOrder;\n    }\n    \n    this.router.navigate([], {\n      relativeTo: this.route,\n      queryParams,\n      queryParamsHandling: \'merge\'\n    });\n  }\n}\n</create-file>\n</function_calls>'}