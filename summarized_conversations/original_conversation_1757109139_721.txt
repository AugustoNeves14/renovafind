{'role': 'assistant', 'content': 'Let\'s create the filters panel component:\n\n<function_calls>\n<create-file file_path="angocine/frontend/angocine/src/app/components/filters-panel/filters-panel.component.ts">\nimport { Component, OnInit, Output, EventEmitter, Input } from \'@angular/core\';\nimport { MovieService } from \'../../services/movie.service\';\n\n@Component({\n  selector: \'app-filters-panel\',\n  templateUrl: \'./filters-panel.component.html\',\n  styleUrls: [\'./filters-panel.component.scss\']\n})\nexport class FiltersPanelComponent implements OnInit {\n  @Input() selectedGenre: string = \'\';\n  @Input() selectedYear: number | null = null;\n  @Input() selectedLanguage: string = \'\';\n  @Input() selectedRating: number | null = null;\n  @Input() selectedSort: string = \'release_year\';\n  @Input() selectedOrder: string = \'desc\';\n  \n  @Output() filtersChanged = new EventEmitter<any>();\n  \n  genres: string[] = [];\n  years: number[] = [];\n  languages: string[] = [];\n  ratings: number[] = [5, 6, 7, 8, 9];\n  sortOptions = [\n    { value: \'release_year\', label: \'Ano de Lançamento\' },\n    { value: \'title\', label: \'Título\' },\n    { value: \'rating\', label: \'Avaliação\' },\n    { value: \'duration\', label: \'Duração\' }\n  ];\n  orderOptions = [\n    { value: \'desc\', label: \'Decrescente\' },\n    { value: \'asc\', label: \'Crescente\' }\n  ];\n  \n  isLoading = true;\n  isExpanded = false;\n  \n  constructor(private movieService: MovieService) {}\n  \n  ngOnInit(): void {\n    this.loadFilters();\n  }\n  \n  loadFilters(): void {\n    // Load genres\n    this.movieService.getGenres().subscribe(\n      response => {\n        this.genres = response.data.genres;\n        this.isLoading = false;\n      },\n      error => {\n        console.error(\'Error loading genres:\', error);\n        this.isLoading = false;\n      }\n    );\n    \n    // Load years\n    this.movieService.getYears().subscribe(\n      response => {\n        this.years = response.data.years;\n      },\n      error => {\n        console.error(\'Error loading years:\', error);\n      }\n    );\n    \n    // Load languages\n    this.movieService.getLanguages().subscribe(\n      response => {\n        this.languages = response.data.languages;\n      },\n      error => {\n        console.error(\'Error loading languages:\', error);\n      }\n    );\n  }\n  \n  toggleExpand(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n  \n  selectGenre(genre: string): void {\n    if (this.selectedGenre === genre) {\n      this.selectedGenre = \'\';\n    } else {\n      this.selectedGenre = genre;\n    }\n    this.emitFilters();\n  }\n  \n  selectYear(year: number): void {\n    if (this.selectedYear === year) {\n      this.selectedYear = null;\n    } else {\n      this.selectedYear = year;\n    }\n    this.emitFilters();\n  }\n  \n  selectLanguage(language: string): void {\n    if (this.selectedLanguage === language) {\n      this.selectedLanguage = \'\';\n    } else {\n      this.selectedLanguage = language;\n    }\n    this.emitFilters();\n  }\n  \n  selectRating(rating: number): void {\n    if (this.selectedRating === rating) {\n      this.selectedRating = null;\n    } else {\n      this.selectedRating = rating;\n    }\n    this.emitFilters();\n  }\n  \n  selectSort(sort: string): void {\n    this.selectedSort = sort;\n    this.emitFilters();\n  }\n  \n  selectOrder(order: string): void {\n    this.selectedOrder = order;\n    this.emitFilters();\n  }\n  \n  clearFilters(): void {\n    this.selectedGenre = \'\';\n    this.selectedYear = null;\n    this.selectedLanguage = \'\';\n    this.selectedRating = null;\n    this.selectedSort = \'release_year\';\n    this.selectedOrder = \'desc\';\n    this.emitFilters();\n  }\n  \n  emitFilters(): void {\n    this.filtersChanged.emit({\n      genre: this.selectedGenre,\n      year: this.selectedYear,\n      language: this.selectedLanguage,\n      rating: this.selectedRating,\n      sort: this.selectedSort,\n      order: this.selectedOrder\n    });\n  }\n  \n  hasActiveFilters(): boolean {\n    return !!(this.selectedGenre || this.selectedYear || this.selectedLanguage || this.selectedRating);\n  }\n}\n</create-file>\n</function_calls>'}