{'role': 'assistant', 'content': 'Let\'s create the admin table component:\n\n<function_calls>\n<create-file file_path="angocine/frontend/angocine/src/app/components/admin-table/admin-table.component.ts">\nimport { Component, OnInit, Input, Output, EventEmitter } from \'@angular/core\';\n\n@Component({\n  selector: \'app-admin-table\',\n  templateUrl: \'./admin-table.component.html\',\n  styleUrls: [\'./admin-table.component.scss\']\n})\nexport class AdminTableComponent implements OnInit {\n  @Input() columns: { key: string, label: string, sortable?: boolean, width?: string }[] = [];\n  @Input() data: any[] = [];\n  @Input() loading: boolean = false;\n  @Input() totalItems: number = 0;\n  @Input() itemsPerPage: number = 10;\n  @Input() currentPage: number = 1;\n  @Input() sortKey: string = \'\';\n  @Input() sortOrder: \'asc\' | \'desc\' = \'desc\';\n  @Input() showActions: boolean = true;\n  @Input() actionButtons: { label: string, icon: string, class: string }[] = [\n    { label: \'Editar\', icon: \'fa-edit\', class: \'btn-primary\' },\n    { label: \'Excluir\', icon: \'fa-trash-alt\', class: \'btn-danger\' }\n  ];\n  \n  @Output() pageChange = new EventEmitter<number>();\n  @Output() sortChange = new EventEmitter<{ key: string, order: \'asc\' | \'desc\' }>();\n  @Output() rowAction = new EventEmitter<{ action: string, item: any }>();\n  @Output() rowClick = new EventEmitter<any>();\n  \n  constructor() {}\n  \n  ngOnInit(): void {}\n  \n  onPageChange(page: number): void {\n    this.pageChange.emit(page);\n  }\n  \n  onSortChange(key: string): void {\n    let order: \'asc\' | \'desc\' = \'asc\';\n    \n    if (this.sortKey === key) {\n      order = this.sortOrder === \'asc\' ? \'desc\' : \'asc\';\n    }\n    \n    this.sortChange.emit({ key, order });\n  }\n  \n  onRowClick(item: any): void {\n    this.rowClick.emit(item);\n  }\n  \n  onActionClick(action: string, item: any, event: Event): void {\n    event.stopPropagation();\n    this.rowAction.emit({ action, item });\n  }\n  \n  getSortIcon(key: string): string {\n    if (this.sortKey !== key) {\n      return \'fa-sort\';\n    }\n    \n    return this.sortOrder === \'asc\' ? \'fa-sort-up\' : \'fa-sort-down\';\n  }\n  \n  getColumnWidth(column: any): string {\n    return column.width || \'auto\';\n  }\n  \n  getColumnClass(column: any): string {\n    let classes = \'\';\n    \n    if (column.sortable) {\n      classes += \' sortable\';\n    }\n    \n    if (this.sortKey === column.key) {\n      classes += \' sorted\';\n    }\n    \n    return classes;\n  }\n  \n  getValueByPath(obj: any, path: string): any {\n    return path.split(\'.\').reduce((o, i) => o ? o[i] : null, obj);\n  }\n  \n  getTotalPages(): number {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n}\n</create-file>\n</function_calls>'}