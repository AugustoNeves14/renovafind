{'role': 'assistant', 'content': 'Now let\'s create the authentication middleware for our backend:\n\n<function_calls>\n<create-file file_path="angocine/backend/src/middleware/auth.middleware.js">\nconst jwt = require(\'jsonwebtoken\');\nrequire(\'dotenv\').config();\n\n// Secret key for JWT\nconst JWT_SECRET = process.env.JWT_SECRET || \'angocine-secret-key\';\n\n// Middleware to authenticate token\nconst authenticateToken = (req, res, next) => {\n  // Get token from header\n  const authHeader = req.headers[\'authorization\'];\n  const token = authHeader && authHeader.split(\' \')[1]; // Bearer TOKEN format\n  \n  if (!token) {\n    return res.status(401).json({ error: true, message: \'Access denied. No token provided.\' });\n  }\n  \n  try {\n    // Verify token\n    const decoded = jwt.verify(token, JWT_SECRET);\n    req.user = decoded;\n    next();\n  } catch (err) {\n    return res.status(403).json({ error: true, message: \'Invalid token.\' });\n  }\n};\n\n// Middleware to check admin role\nconst isAdmin = (req, res, next) => {\n  if (!req.user || req.user.role !== \'admin\') {\n    return res.status(403).json({ error: true, message: \'Access denied. Admin privileges required.\' });\n  }\n  next();\n};\n\nmodule.exports = {\n  authenticateToken,\n  isAdmin\n};\n</create-file>\n</function_calls>'}