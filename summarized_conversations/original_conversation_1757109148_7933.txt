{'role': 'assistant', 'content': 'Let\'s create the watchlist button component:\n\n<function_calls>\n<create-file file_path="angocine/frontend/angocine/src/app/components/watchlist-button/watchlist-button.component.ts">\nimport { Component, OnInit, Input, Output, EventEmitter } from \'@angular/core\';\nimport { UserService } from \'../../services/user.service\';\nimport { AuthService } from \'../../services/auth.service\';\nimport { AnalyticsService } from \'../../services/analytics.service\';\nimport { Router } from \'@angular/router\';\n\n@Component({\n  selector: \'app-watchlist-button\',\n  templateUrl: \'./watchlist-button.component.html\',\n  styleUrls: [\'./watchlist-button.component.scss\']\n})\nexport class WatchlistButtonComponent implements OnInit {\n  @Input() movieId!: number;\n  @Input() size: \'sm\' | \'md\' | \'lg\' = \'md\';\n  @Input() showText: boolean = true;\n  @Input() variant: \'primary\' | \'outline\' | \'icon\' = \'primary\';\n  \n  @Output() added = new EventEmitter<void>();\n  @Output() removed = new EventEmitter<void>();\n  \n  isInWatchlist = false;\n  isLoading = false;\n  isLoggedIn = false;\n  hasProfile = false;\n  \n  constructor(\n    private userService: UserService,\n    private authService: AuthService,\n    private analyticsService: AnalyticsService,\n    private router: Router\n  ) {}\n  \n  ngOnInit(): void {\n    this.authService.currentUser$.subscribe(user => {\n      this.isLoggedIn = !!user;\n      this.checkWatchlistStatus();\n    });\n    \n    this.authService.currentProfile$.subscribe(profile => {\n      this.hasProfile = !!profile;\n      this.checkWatchlistStatus();\n    });\n  }\n  \n  checkWatchlistStatus(): void {\n    if (!this.isLoggedIn || !this.hasProfile || !this.movieId) {\n      return;\n    }\n    \n    this.isLoading = true;\n    \n    this.userService.checkWatchlist(this.movieId).subscribe(\n      response => {\n        this.isInWatchlist = response.data.in_watchlist;\n        this.isLoading = false;\n      },\n      error => {\n        console.error(\'Error checking watchlist status:\', error);\n        this.isLoading = false;\n      }\n    );\n  }\n  \n  toggleWatchlist(): void {\n    if (!this.isLoggedIn) {\n      this.router.navigate([\'/auth/login\'], { queryParams: { returnUrl: `/movie/${this.movieId}` } });\n      return;\n    }\n    \n    if (!this.hasProfile) {\n      this.router.navigate([\'/profile\']);\n      return;\n    }\n    \n    this.isLoading = true;\n    \n    if (this.isInWatchlist) {\n      this.removeFromWatchlist();\n    } else {\n      this.addToWatchlist();\n    }\n  }\n  \n  addToWatchlist(): void {\n    this.userService.addToWatchlist(this.movieId).subscribe(\n      response => {\n        this.isInWatchlist = true;\n        this.isLoading = false;\n        this.added.emit();\n        \n        // Record analytics event\n        const currentProfile = this.authService.currentProfileValue;\n        if (currentProfile) {\n          this.analyticsService.recordWatchlistAdd(currentProfile.id, this.movieId).subscribe();\n        }\n      },\n      error => {\n        console.error(\'Error adding to watchlist:\', error);\n        this.isLoading = false;\n      }\n    );\n  }\n  \n  removeFromWatchlist(): void {\n    this.userService.removeFromWatchlist(this.movieId).subscribe(\n      response => {\n        this.isInWatchlist = false;\n        this.isLoading = false;\n        this.removed.emit();\n        \n        // Record analytics event\n        const currentProfile = this.authService.currentProfileValue;\n        if (currentProfile) {\n          this.analyticsService.recordWatchlistRemove(currentProfile.id, this.movieId).subscribe();\n        }\n      },\n      error => {\n        console.error(\'Error removing from watchlist:\', error);\n        this.isLoading = false;\n      }\n    );\n  }\n  \n  getButtonClasses(): string {\n    let classes = \'watchlist-button\';\n    \n    // Size\n    classes += ` size-${this.size}`;\n    \n    // Variant\n    classes += ` variant-${this.variant}`;\n    \n    // State\n    if (this.isInWatchlist) {\n      classes += \' active\';\n    }\n    \n    return classes;\n  }\n}\n</create-file>\n</function_calls>'}