{'role': 'assistant', 'content': 'Let\'s create the modal component:\n\n<function_calls>\n<create-file file_path="angocine/frontend/angocine/src/app/components/modal/modal.component.ts">\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, ViewChild } from \'@angular/core\';\nimport { BsModalRef } from \'ngx-bootstrap/modal\';\n\n@Component({\n  selector: \'app-modal\',\n  templateUrl: \'./modal.component.html\',\n  styleUrls: [\'./modal.component.scss\']\n})\nexport class ModalComponent implements OnInit {\n  @Input() title: string = \'\';\n  @Input() showCloseButton: boolean = true;\n  @Input() size: \'sm\' | \'md\' | \'lg\' | \'xl\' = \'md\';\n  @Input() centered: boolean = true;\n  @Input() backdrop: boolean | \'static\' = true;\n  @Input() keyboard: boolean = true;\n  @Input() animation: boolean = true;\n  @Input() ignoreBackdropClick: boolean = false;\n  \n  @Output() closed = new EventEmitter<void>();\n  \n  @ViewChild(\'modalContent\') modalContent!: ElementRef;\n  \n  modalRef?: BsModalRef;\n  \n  constructor() {}\n  \n  ngOnInit(): void {}\n  \n  close(): void {\n    this.closed.emit();\n  }\n  \n  onBackdropClick(event: MouseEvent): void {\n    if (this.ignoreBackdropClick) return;\n    \n    const target = event.target as HTMLElement;\n    const modalContent = this.modalContent.nativeElement;\n    \n    if (!modalContent.contains(target)) {\n      this.close();\n    }\n  }\n  \n  getModalClass(): string {\n    let classes = \'modal-dialog\';\n    \n    if (this.centered) {\n      classes += \' modal-dialog-centered\';\n    }\n    \n    switch (this.size) {\n      case \'sm\':\n        classes += \' modal-sm\';\n        break;\n      case \'lg\':\n        classes += \' modal-lg\';\n        break;\n      case \'xl\':\n        classes += \' modal-xl\';\n        break;\n      default:\n        // Default is medium, no additional class needed\n        break;\n    }\n    \n    return classes;\n  }\n}\n</create-file>\n</function_calls>'}